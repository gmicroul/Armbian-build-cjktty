
name: Build Linux_msm8953_cjk
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      set_git_repo:
        description: "repo"
        required: true
        default: "msm8953-mainline/linux"
        #default: "185264646/linux"
      set_git_branch:
        description: "branch"
        required: true
        default: "6.7.5/main"
        #default: "old/msm8916/5.18"
      set_kernel_patch_version:
        description: "kernel_patch_version"
        required: true
        default: "msm8953-6.7"
      set_kernel_localversion:
        description: "kernel_localversion"
        required: true
        default: "-calicocat-msm8953"

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y binfmt-support qemu-user-static  kernel-package fakeroot simg2img img2simg mkbootimg bison libelf-dev flex gcc-aarch64-linux-gnu pkg-config libncurses-dev libssl-dev unzip git devscripts debhelper
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Download source code
        id: down
        run: |
          git clone --depth 1 -b 6.7.5/main https://github.com/arm64-builder/linux.git linux
      - name: Patch kernel
        id: patch
        run: |
          cp  cjktty-6.7.patch linux/cjktty-6.7.patch
          
          
          cp cjk_config linux/arch/arm64/configs/msm8953_defconfig
          cd linux
          wget https://raw.githubusercontent.com/zhmars/cjktty-patches/refs/heads/master/cjktty-add-cjk32x32-font-data.patch
          export CROSS_COMPILE=aarch64-linux-gnu-
          export ARCH=arm64
          make clean
          make mrproper
          git apply cjktty-6.7.patch
          git apply cjktty-add-cjk32x32-font-data.patch
          git add .
          cd ..
      - name: Compile
        id: compile
        run: |
          cd linux

          export CROSS_COMPILE=aarch64-linux-gnu-
          export ARCH=arm64
          make msm8953_defconfig
          make deb-pkg -j$(nproc)
          cd ..
          cp *.deb /workdir
          mkdir tmpboot
          cp ./linux/arch/arm64/boot/dts/qcom/*mido*.dtb tmpboot/dtb
          cp ./linux/arch/arm64/boot/Image.gz tmpboot/
          cp ./test/boot/initrd.img* tmpboot/initrd.img
          cat tmpboot/Image.gz tmpboot/dtb > tmpboot/kernel-dtb

          mkbootimg --base 0x80000000 \
                  --kernel_offset 0x00008000 \
                  --ramdisk_offset 0x01000000 \
                  --tags_offset 0x00000100 \
                  --pagesize 2048 \
                  --second_offset 0x00f00000 \
                  --ramdisk ./tmpboot/initrd.img \
                  --cmdline "console=tty0 root=UUID=5b88fe83-8c22-4602-8d9c-342f5795d0b9 rw loglevel=3 splash"\
                  --kernel ./tmpboot/kernel-dtb -o ./tmpboot/boot.img
          cp ./tmpboot/boot.img /workdir       
          cp linux/arch/arm64/boot/Image.gz /workdir
          tar -czf /workdir/msm8953_dtb.tar.gz linux/arch/arm64/boot/dts/qcom/*mido*.dtb
          find ./ -type f \( ! -name "*.ko" -a ! -name "modules.*" \) -exec rm -f {} \;
          cd linux/
          tar -czf /workdir/modules.tar.gz ./*
          cd ..
          echo "::set-output name=status::success"
          ls -ltrh

      - name: Upload file
        uses: actions/upload-artifact@v3
        with:
          name: debian-linux
          path: /workdir/*

      - name: Upload image to Release
        uses: ncipollo/release-action@main
        if: steps.compile.outputs.status == 'success' && !cancelled()
        with:
          tag: Linux_Kernel_${{ env.COMPILE_STARTINGTIME }}
          artifacts: /workdir/*
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            This is Linux Kernel ${{ env.LINUX_GITURL }}
