name: Build cjktty as APK for Alpine Linux ARM64

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04 # 使用 Ubuntu 作为构建环境

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up QEMU for ARM64
      uses: docker/setup-qemu-action@v2
      with:
        platforms: linux/arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libncurses5-dev \
          libncursesw5-dev \
          zlib1g-dev \
          wget \
          unzip \
          git

    - name: Download and prepare kernel source
      run: |
        git clone -b sdm845/6.9-dev https://gitlab.com/sdm845-mainline/linux.git --depth=1
        ls -ltr
        pwd
        

    - name: Configure kernel for SDM845
      working-directory: ./linux/kernel
      run: |
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- defconfig
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- menuconfig

    - name: Compile kernel
      working-directory: ./linux/kernel
      run: make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- Image modules dtbs

    - name: Download cjktty source
      run: mkdir cjktty-source && cp ./cjktty-6.9.patch cjktty-source && cp ./APKBUILD cjktty-source

    - name: Compile cjktty
      working-directory: ./cjktty-source
      run: make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- all

    - name: Create APK package
      working-directory: ./cjktty-source
      run: |
        mkdir -p output
        apk build --output output/cjktty.apk . # 假设你有一个APKBUILD文件在cjktty-source目录下

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: cjktty-apk
        path: ./cjktty-source/output/cjktty.apk
